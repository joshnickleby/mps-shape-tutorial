package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCircle = createDescriptorForCircle();
  /*package*/ final ConceptDescriptor myConceptColor = createDescriptorForColor();
  /*package*/ final ConceptDescriptor myConceptColorReference = createDescriptorForColorReference();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptSquare = createDescriptorForSquare();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCanvas, myConceptCircle, myConceptColor, myConceptColorReference, myConceptShape, myConceptSquare);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Canvas:
        return myConceptCanvas;
      case LanguageConceptSwitch.Circle:
        return myConceptCircle;
      case LanguageConceptSwitch.Color:
        return myConceptColor;
      case LanguageConceptSwitch.ColorReference:
        return myConceptColorReference;
      case LanguageConceptSwitch.Shape:
        return myConceptShape;
      case LanguageConceptSwitch.Square:
        return myConceptSquare;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCanvas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Canvas", 0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffdf26dL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9b30e3a9-3dd3-4179-9bc2-e0e5047122ac(Shapes.structure)/615955011599200877");
    b.version(2);
    b.aggregate("shapes", 0x88c4fd1cffdf270L).target(0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffdf250L).optional(true).ordered(true).multiple(true).origin("615955011599200880").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCircle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Circle", 0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffdf251L);
    b.class_(false, false, false);
    b.super_("Shapes.structure.Shape", 0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffdf250L);
    b.origin("r:9b30e3a9-3dd3-4179-9bc2-e0e5047122ac(Shapes.structure)/615955011599200849");
    b.version(2);
    b.property("x", 0x88c4fd1cffdf252L).type(PrimitiveTypeId.INTEGER).origin("615955011599200850").done();
    b.property("y", 0x88c4fd1cffdf254L).type(PrimitiveTypeId.INTEGER).origin("615955011599200852").done();
    b.property("radius", 0x88c4fd1cffdf257L).type(PrimitiveTypeId.INTEGER).origin("615955011599200855").done();
    b.alias("circle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Color", 0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffe8c8cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9b30e3a9-3dd3-4179-9bc2-e0e5047122ac(Shapes.structure)/615955011599240332");
    b.version(2);
    b.alias("color");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColorReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "ColorReference", 0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffebd05L);
    b.class_(false, false, false);
    b.origin("r:9b30e3a9-3dd3-4179-9bc2-e0e5047122ac(Shapes.structure)/615955011599252741");
    b.version(2);
    b.associate("target", 0x88c4fd1cffebd06L).target(0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffe8c8cL).optional(false).origin("615955011599252742").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Shape", 0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffdf250L);
    b.class_(false, true, false);
    b.origin("r:9b30e3a9-3dd3-4179-9bc2-e0e5047122ac(Shapes.structure)/615955011599200848");
    b.version(2);
    b.aggregate("color", 0x88c4fd1cffebd1dL).target(0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffebd05L).optional(false).ordered(true).multiple(false).origin("615955011599252765").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSquare() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Square", 0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffdf263L);
    b.class_(false, false, false);
    b.super_("Shapes.structure.Shape", 0xb2221ba7a9454821L, 0xa8a492feb564c230L, 0x88c4fd1cffdf250L);
    b.origin("r:9b30e3a9-3dd3-4179-9bc2-e0e5047122ac(Shapes.structure)/615955011599200867");
    b.version(2);
    b.property("upperLeftX", 0x88c4fd1cffdf264L).type(PrimitiveTypeId.INTEGER).origin("615955011599200868").done();
    b.property("upperLeftY", 0x88c4fd1cffdf266L).type(PrimitiveTypeId.INTEGER).origin("615955011599200870").done();
    b.property("size", 0x88c4fd1cffdf269L).type(PrimitiveTypeId.INTEGER).origin("615955011599200873").done();
    b.alias("square");
    return b.create();
  }
}
